name: Deploy to GCP with Terraform

on:
  push:
    branches:
      - main
      - develop
      - staging
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || github.ref == 'refs/heads/develop' && 'dev' || github.ref == 'refs/heads/staging' && 'beta'}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set environment variable based on branch
        id: set_env
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF##*/}" == "staging" ]]; then
            echo "env=beta" >> $GITHUB_OUTPUT
          else
            echo "env=dev" >> $GITHUB_OUTPUT
          fi

      - name: Authenticate to GCP via Workload Identity
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/172250116490/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: ${{ vars.SA_NAME }}
          project_id: oceanic-muse-464012-k2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -backend-config="${{ steps.set_env.outputs.env }}/${{ steps.set_env.outputs.env }}.backend.config"
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="secret_env_value=${{ secrets.SECRET_ENV_VALUE }}" -var-file="${{ steps.set_env.outputs.env }}/${{ steps.set_env.outputs.env }}.tfvars"
        working-directory: terraform
